<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.dantin.webster.support.oauth.repository.OAuthAccessTokenRepository">
    <sql id="BASE_TABLE">
        "t_oauth_access_token"
    </sql>

    <sql id="BASE_COLUMNS">
        "token_id", "token", "authentication_id", "user_name", "client_id", "authentication", "refresh_token"
    </sql>

    <resultMap id="accessTokenMap" type="com.github.dantin.webster.support.oauth.entity.domain.OAuthAccessToken">
        <result property="tokenId" column="token_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="token" column="token" javaType="org.springframework.security.oauth2.common.OAuth2AccessToken"
                typeHandler="com.github.dantin.webster.support.oauth.repository.handlers.OAuth2AccessTokenTypeHandler"/>
        <result property="authenticationId" column="authentication_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="username" column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="clientId" column="client_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="authentication" column="authentication"
                typeHandler="com.github.dantin.webster.support.oauth.repository.handlers.OAuth2AuthenticationTypeHandler"/>
        <result property="refreshToken" column="refresh_token" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findOneByTokenId" resultMap="accessTokenMap">
        SELECT
        <include refid="BASE_COLUMNS"/>
        FROM
        <include refid="BASE_TABLE"/>
        WHERE
        "token_id" = #{tokenId}
        LIMIT 1
    </select>

    <select id="findOneByAuthenticationId" resultMap="accessTokenMap">
        SELECT
        <include refid="BASE_COLUMNS"/>
        FROM
        <include refid="BASE_TABLE"/>
        WHERE
        "authentication_id" = #{authenticationId}
        LIMIT 1
    </select>

    <select id="findAllByClientId" resultMap="accessTokenMap">
        SELECT
        <include refid="BASE_COLUMNS"/>
        FROM
        <include refid="BASE_TABLE"/>
        WHERE
        "client_id" = #{clientId}
    </select>

    <select id="findAllByClientIdAndUsername" resultMap="accessTokenMap">
        SELECT
        <include refid="BASE_COLUMNS"/>
        FROM
        <include refid="BASE_TABLE"/>
        WHERE
        "client_id" = #{clientId}
        AND
        "user_name" = #{username}
    </select>

    <delete id="deleteByTokenId">
        DELETE FROM
        <include refid="BASE_TABLE"/>
        WHERE
        "token_id" = #{tokenId}
    </delete>

    <delete id="deleteByRefreshToken">
        DELETE FROM
        <include refid="BASE_TABLE"/>
        WHERE
        "refresh_token" = #{refreshToken}
    </delete>

    <insert id="save" parameterType="com.github.dantin.webster.support.oauth.entity.domain.OAuthAccessToken">
        INSERT INTO
        <include refid="BASE_TABLE"/>
        <trim prefix="(" suffix=")" suffixOverrides=", ">
            "token_id",
            "token",
            "authentication_id",
            "user_name",
            "client_id",
            "authentication",
            "refresh_token",
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=", ">
            #{tokenId},
            #{token,typeHandler=com.github.dantin.webster.support.oauth.repository.handlers.OAuth2AccessTokenTypeHandler},
            #{authenticationId},
            #{username},
            #{clientId},
            #{authentication,typeHandler=com.github.dantin.webster.support.oauth.repository.handlers.OAuth2AuthenticationTypeHandler},
            #{refreshToken},
        </trim>
    </insert>
</mapper>
